{"version":3,"sources":["utils/BigMath.js","CalcField.tsx","useLocalStorage.ts","Main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["fns","indexOfAny","str","anyOf","startIndex","i","length","includes","charAt","math","create","all","number","precision","evaluate","expr","scope","replace","forEach","fn","index","indexOf","slice","fixExpr","ans","split","join","isNaN","replacements","name","fnBigNumber","x","multiply","divide","pi","bignumber","typed","map","result","import","override","CalcField","props","inputField","useRef","outputField","useState","value","calc","setCalc","answers","line","trim","startsWith","style","height","display","TextField","width","autoFocus","multiline","label","placeholder","onChange","event","target","inputRef","inputProps","onScroll","current","scrollTop","overflow","InputProps","variant","flex","marginLeft","readOnly","useLocalStorage","key","initialValue","readValue","window","item","localStorage","getItem","JSON","parse","error","console","warn","storedValue","setStoredValue","useEffect","handleStorageChange","addEventListener","removeEventListener","newValue","Function","setItem","stringify","dispatchEvent","Event","TabPanel","children","other","role","hidden","id","Box","p","boxSizing","Typography","component","useStyles","makeStyles","theme","root","flexDirection","backgroundColor","palette","background","default","tabPanel","Main","classes","setValue","tabs","setTabs","tabEls","tab","Tab","a11yProps","tabPanels","className","items","AppBar","position","Tabs","scrollButtons","IconButton","onClick","color","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAEMA,EAAM,CACR,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OACxC,MAAO,MAAO,MAAO,MAAO,MAAO,MACnC,MAAO,MAAO,QAAS,QAAS,OAChC,OAAQ,QAAS,OAAQ,QAUvBC,EAAa,SAACC,EAAKC,GACrB,IADgD,IAApBC,EAAmB,uDAAN,EAChCC,EAAID,EAAYC,EAAIH,EAAII,OAAQD,IACrC,GAAIF,EAAMI,SAASL,EAAIM,OAAOH,IAC1B,OAAOA,EAIf,OAAQ,GAmCNI,EAAOC,YAAOC,IAAK,CACrBC,OAAQ,YACRC,UAAW,KASFC,EAAW,SAACC,EAAMC,GAC3BD,EAvCY,SAACA,GAwBb,OAvBAA,EAAOA,EAAKE,QAAQ,SAAU,MAErBX,OAAS,GACdN,EAAIkB,SAAQ,SAAAC,GACRA,GAAM,IAGN,IAFA,IAAIC,EAAQL,EAAKM,QAAQF,GAElBC,GAAS,GAAKA,GAASL,EAAKT,QAC/Bc,GAASD,EAAGb,OACZS,EAAOA,EAAKO,MAAM,EAAGF,GAAS,IAAML,EAAKO,MAAMF,IAE/CA,EAAQnB,EAAWc,EAAM,CAAC,IAAK,KAAMK,IAEzB,IACRA,EAAQL,EAAKT,QAIjBc,GADAL,EAAOA,EAAKO,MAAM,EAAGF,GAAS,IAAML,EAAKO,MAAMF,IAClCC,QAAQF,EAAIC,MAK9BL,EAeAQ,CAAQR,GAEf,IADA,IAAIS,EAAM,GACDnB,EAAI,EAAGA,EAAIU,EAAKT,OAAQD,IAC7B,GAAgB,MAAZU,EAAKV,GAAY,CACjBA,IAGA,IAAIe,GAFJL,EAAOA,EAAKO,MAAM,EAAGjB,GAAK,IAAMU,EAAKO,MAAMjB,IAE1BgB,QAAQ,IAAKhB,GAC1Be,EAAQ,IACRA,EAAQL,EAAKT,QAGjBS,EAAOA,EAAKO,MAAM,EAAGF,GAAS,IAAML,EAAKO,MAAMF,GAIvDL,EAAOA,EAAKU,MAAM,KAAKC,KAAK,KAE5B,IACIF,EAAMf,EAAKK,SAASC,EAAMC,GAEtBW,MAAMH,KACNA,EAAM,OAEZ,SACEA,EAAM,QAGV,OAAOA,GAGPI,EAAe,GAEN,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5CV,SAAQ,SAAUW,GACnB,IAAMV,EAAKV,EAAKoB,GAEVC,EAAc,SAAUC,GAC1B,OAAOZ,EAAGV,EAAKuB,SAASD,EAAGtB,EAAKwB,OAAOxB,EAAKyB,GAAIzB,EAAK0B,UAAU,SAInEP,EAAaC,GAAQpB,EAAK2B,MAAMP,EAAM,CAClC,UAAaC,EACb,iBAAkB,SAAUC,GACxB,OAAOtB,EAAK4B,IAAIN,EAAGD,SAKlB,CAAC,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,QAC1DZ,SAAQ,SAAUW,GACnB,IAAMV,EAAKV,EAAKoB,GAEVC,EAAc,SAAUC,GAC1B,IAAMO,EAASnB,EAAGY,GAClB,OAAOtB,EAAKuB,SAASM,EAAQ7B,EAAKwB,OAAOxB,EAAK0B,UAAU,KAAM1B,EAAKyB,MAGvEN,EAAaC,GAAQpB,EAAK2B,MAAMP,EAAM,CAClC,UAAaC,EACb,iBAAkB,SAAUC,GACxB,OAAOtB,EAAK4B,IAAIN,EAAGD,SAK/BrB,EAAK8B,OAAOX,EAAc,CAAEY,UAAU,IAEvB/B,I,QCzEAgC,EAzDG,SAACC,GAA2B,IAAD,EACnCC,EAAaC,mBACbC,EAAcD,mBACpB,EAAwBE,mBAAQ,UAACJ,EAAMK,aAAP,QAAgB,IAAhD,mBAAOC,EAAP,KAAaC,EAAb,KACIjC,EAAQ,GAeNkC,EAAUF,EAAKvB,MAAM,SAASY,KAAI,SAACc,GACrC,IAAI3B,EAAM,GACNT,EAAOoC,EAAKC,OAMhB,OAJIrC,EAAKT,SAAWS,EAAKsC,WAAW,OAASvC,IACzCU,EAAMV,EAASC,EAAMC,IAGlBmC,EAAO,MAAQ3B,KACvBE,KAAK,MAER,OACI,sBAAK4B,MAAO,CAAEC,OAAQ,OAAQC,QAAS,QAAvC,UACI,cAACC,EAAA,EAAD,CACIH,MAAO,CAAEI,MAAO,MAAOH,OAAQ,QAC/BI,WAAS,EACTC,WAAS,EACTC,MAAM,cACNC,YAAY,WACZf,MAAOC,EACPe,SAjCS,SAACC,GAClBf,EAAQe,EAAMC,OAAOlB,OAEjBL,EAAMqB,UACNrB,EAAMqB,SAASC,EAAMC,OAAOlB,QA8BxBmB,SAAUvB,EACVwB,WAAY,CAAEC,SA5BL,SAACJ,GACdrB,EAAW0B,SAAWxB,EAAYwB,UAClCxB,EAAYwB,QAAQC,UAAY3B,EAAW0B,QAAQC,YA0BThB,MAAO,CAAEI,MAAO,OAAQH,OAAQ,OAAQgB,SAAU,SACxFC,WAAY,CAAElB,MAAO,CAAEI,MAAO,OAAQH,OAAQ,SAC9CkB,QAAQ,aACZ,cAAChB,EAAA,EAAD,CACIH,MAAO,CAAEoB,KAAM,WAAYC,WAAY,QACvCf,WAAS,EACTC,MAAM,UACNY,QAAQ,WACR1B,MAAOG,EACPgB,SAAUrB,EACV2B,WAAY,CAAElB,MAAO,CAAEI,MAAO,OAAQH,OAAQ,SAC9CY,WAAY,CAAES,UAAU,EAAMtB,MAAO,CAAEI,MAAO,OAAQH,OAAQ,e,0BCkB/DsB,MA3Ef,SAA4BC,EAAaC,GAGvC,IAAMC,EAAY,WAEhB,GAAsB,qBAAXC,OACT,OAAOF,EAGT,IACE,IAAMG,EAAOD,OAAOE,aAAaC,QAAQN,GACzC,OAAOI,EAAQG,KAAKC,MAAMJ,GAAcH,EACxC,MAAOQ,GAEP,OADAC,QAAQC,KAAR,+CAAgDX,EAAhD,WAAyDS,GAClDR,IAMX,EAAsCjC,mBAAYkC,GAAlD,mBAAOU,EAAP,KAAoBC,EAApB,KAoDA,OAvBAC,qBAAU,WACRD,EAAeX,OAEd,IAEHY,qBAAU,WACR,IAAMC,EAAsB,WAC1BF,EAAeX,MASjB,OALAC,OAAOa,iBAAiB,UAAWD,GAGnCZ,OAAOa,iBAAiB,gBAAiBD,GAElC,WACLZ,OAAOc,oBAAoB,UAAWF,GACtCZ,OAAOc,oBAAoB,gBAAiBF,MAG7C,IAEI,CAACH,EAhDsB,SAAA3C,GAEP,oBAAVkC,QACTO,QAAQC,KAAR,+CACqCX,EADrC,mDAKF,IAEE,IAAMkB,EAAWjD,aAAiBkD,SAAWlD,EAAM2C,GAAe3C,EAGlEkC,OAAOE,aAAae,QAAQpB,EAAKO,KAAKc,UAAUH,IAGhDL,EAAeK,GAGff,OAAOmB,cAAc,IAAIC,MAAM,kBAC/B,MAAOd,GACPC,QAAQC,KAAR,+CAAgDX,EAAhD,WAAyDS,O,+BC9BzDe,EAAW,SAAC5D,GACd,IAAQ6D,EAAqC7D,EAArC6D,SAAUxD,EAA2BL,EAA3BK,MAAO3B,EAAoBsB,EAApBtB,MAAUoF,EAAnC,YAA6C9D,EAA7C,GAEA,OACI,6CACI+D,KAAK,WACLC,OAAQ3D,IAAU3B,EAClBuF,GAAE,0BAAqBvF,GACvB,uCAA+BA,IAC3BoF,GALR,aAOKzD,IAAU3B,GACP,cAACwF,EAAA,EAAD,CAAKC,EAAG,EAAGtD,OAAO,OAAOuD,UAAU,aAAnC,SACI,cAACC,EAAA,EAAD,CAAYC,UAAW,OAAQ1D,MAAO,CAAEC,OAAQ,QAAhD,SAA2DgD,UAc/E,IAAMU,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF5D,QAAS,OACT6D,cAAe,SACf9D,OAAQ,OACR+D,gBAAiBH,EAAMI,QAAQC,WAAWC,SAE9CC,SAAU,CACNhD,KAAM,gBAIC,SAASiD,IACpB,IAAMC,EAAUX,IAChB,EAA0BnE,mBAAS,GAAnC,mBAAOC,EAAP,KAAc8E,EAAd,KACA,EAAwBhD,EAA0B,OAAQ,IAA1D,mBAAOiD,EAAP,KAAaC,EAAb,KASMC,EAASF,EAAKzF,KAAI,SAAC4F,EAAK7G,GAC1B,OAAO,cAAC8G,EAAA,EAAD,aAAiBrE,MAAK,eAAUzC,IAhC/C,SAAmBA,GACf,MAAO,CACHuF,GAAG,cAAD,OAAgBvF,GAClB,gBAAgB,mBAAhB,OAAoCA,IA6BgB+G,CAAU/G,IAA7CA,MAGfgH,EAAYN,EAAKzF,KAAI,SAAC4F,EAAK7G,GAO7B,OAAO,cAAC,EAAD,CAAsBiH,UAAWT,EAAQF,SAAU3E,MAAOA,EAAO3B,MAAOA,EAAxE,SACH,cAAC,EAAD,CAAW2B,MAAOkF,EAAKlE,SAPN,SAAChB,GAClB,IAAIuF,EAAK,YAAOR,GAChBQ,EAAMlH,GAAS2B,EACfgF,EAAQO,OAGUlH,MAK1B,OACI,sBAAKiH,UAAWT,EAAQR,KAAxB,UACI,cAACmB,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,CACIhE,QAAQ,aACRiE,cAAc,OACd3F,MAAOA,EACPgB,SA9BK,SAACC,EAA8BgC,GAChD6B,EAAS7B,IA6B2B,aAAW,sBAJvC,UAKKgC,EACD,cAACW,EAAA,EAAD,CAAYC,QA7BR,SAAC5E,GACjB+D,EAAQ,GAAD,mBAAKD,GAAL,CAAW,OA4BN,SACI,cAAC,IAAD,CAASxE,MAAO,CAAEuF,MAAO,kBAIpCT,KCxFEU,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAACV,EAAD,OCOSoB,EAZS,SAACC,GACnBA,GAAeA,aAAuB/C,UACxC,8BAAqBgD,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.80316682.chunk.js","sourcesContent":["import { all, create } from \"mathjs\";\r\n\r\nconst fns = [\r\n    'asin', 'acos', 'atan', 'acot', 'acsc', 'asec',\r\n    'sin', 'cos', 'tan', 'sec', 'cot', 'csc',\r\n    'exp', 'log', 'log10', 'log1p', 'log2',\r\n    'sign', 'floor', 'ceil', 'sqrt'\r\n];\r\n\r\n/**\r\n * \r\n * @param {String} str \r\n * @param {String[]} anyOf \r\n * @param {Number} startIndex \r\n * @returns {Number}\r\n */\r\nconst indexOfAny = (str, anyOf, startIndex = 0) => {\r\n    for (let i = startIndex; i < str.length; i++) {\r\n        if (anyOf.includes(str.charAt(i))) {\r\n            return i;\r\n        }\r\n    }\r\n\r\n    return -1;\r\n};\r\n\r\n/**\r\n * \r\n * @param {String} expr \r\n * @returns {String}\r\n */\r\nconst fixExpr = (expr) => {\r\n    expr = expr.replace(/\\s\\s+/g, ' ');\r\n\r\n    if (expr.length > 0) {\r\n        fns.forEach(fn => {\r\n            fn += ' ';\r\n            let index = expr.indexOf(fn);\r\n\r\n            while (index > -1 && index <= expr.length) {\r\n                index += fn.length;\r\n                expr = expr.slice(0, index) + '(' + expr.slice(index);\r\n\r\n                index = indexOfAny(expr, [' ', ')'], index);\r\n\r\n                if (index < 0) {\r\n                    index = expr.length;\r\n                }\r\n\r\n                expr = expr.slice(0, index) + ')' + expr.slice(index);\r\n                index = expr.indexOf(fn, index);\r\n            }\r\n        });\r\n    }\r\n\r\n    return expr;\r\n};\r\n\r\nconst math = create(all, {\r\n    number: 'BigNumber',\r\n    precision: 32\r\n});\r\n\r\n/**\r\n * \r\n * @param {String} expr \r\n * @param {Object} scope \r\n * @returns {String}\r\n */\r\nexport const evaluate = (expr, scope) => {\r\n    expr = fixExpr(expr);\r\n    let ans = '';\r\n    for (let i = 0; i < expr.length; i++) {\r\n        if (expr[i] === '/') {\r\n            i++;\r\n            expr = expr.slice(0, i) + '(' + expr.slice(i);\r\n\r\n            let index = expr.indexOf(')', i);\r\n            if (index < 0) {\r\n                index = expr.length;\r\n            }\r\n\r\n            expr = expr.slice(0, index) + ')' + expr.slice(index);\r\n        }\r\n    }\r\n\r\n    expr = expr.split(':').join('/');\r\n\r\n    try {\r\n        ans = math.evaluate(expr, scope);\r\n\r\n        if (isNaN(ans)) {\r\n            ans = 'NaN';\r\n        }\r\n    } catch {\r\n        ans = 'Error';\r\n    }\r\n\r\n    return ans;\r\n};\r\n\r\nlet replacements = {};\r\n\r\nconst fns1 = ['sin', 'cos', 'tan', 'sec', 'cot', 'csc'];\r\nfns1.forEach(function (name) {\r\n    const fn = math[name]\r\n\r\n    const fnBigNumber = function (x) {\r\n        return fn(math.multiply(x, math.divide(math.pi, math.bignumber(180))));\r\n    };\r\n\r\n    // create a typed-function which check the input types\r\n    replacements[name] = math.typed(name, {\r\n        'BigNumber': fnBigNumber,\r\n        'Array | Matrix': function (x) {\r\n            return math.map(x, fnBigNumber)\r\n        }\r\n    });\r\n});\r\n\r\nconst fns2 = ['asin', 'acos', 'atan', 'atan2', 'acot', 'acsc', 'asec'];\r\nfns2.forEach(function (name) {\r\n    const fn = math[name]\r\n\r\n    const fnBigNumber = function (x) {\r\n        const result = fn(x)\r\n        return math.multiply(result, math.divide(math.bignumber(180), math.pi));\r\n    };\r\n\r\n    replacements[name] = math.typed(name, {\r\n        'BigNumber': fnBigNumber,\r\n        'Array | Matrix': function (x) {\r\n            return math.map(x, fnBigNumber)\r\n        }\r\n    })\r\n});\r\n\r\nmath.import(replacements, { override: true });\r\n\r\nexport default math;","import { TextField } from '@material-ui/core'\r\nimport { evaluate } from './utils/BigMath'\r\nimport { ChangeEvent, UIEvent, useRef, useState } from 'react'\r\n\r\ntype CalcFieldProps = {\r\n    value: string,\r\n    onChange: (value: string) => void\r\n};\r\n\r\nconst CalcField = (props: CalcFieldProps) => {\r\n    const inputField = useRef<HTMLTextAreaElement>();\r\n    const outputField = useRef<HTMLTextAreaElement>();\r\n    const [calc, setCalc] = useState(props.value ?? '');\r\n    let scope = {};\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setCalc(event.target.value);\r\n\r\n        if (props.onChange)\r\n            props.onChange(event.target.value);\r\n    };\r\n\r\n    const handleScroll = (event: UIEvent<HTMLTextAreaElement>) => {\r\n        if (inputField.current && outputField.current) {\r\n            outputField.current.scrollTop = inputField.current.scrollTop;\r\n        }\r\n    };\r\n\r\n    const answers = calc.split(/\\r?\\n/).map((line) => {\r\n        let ans = '';\r\n        let expr = line.trim();\r\n\r\n        if (expr.length && !expr.startsWith('//') && evaluate) {\r\n            ans = evaluate(expr, scope);\r\n        }\r\n\r\n        return line + ' = ' + ans;\r\n    }).join('\\n');\r\n\r\n    return (\r\n        <div style={{ height: '100%', display: 'flex' }}>\r\n            <TextField\r\n                style={{ width: '50%', height: '100%' }}\r\n                autoFocus\r\n                multiline\r\n                label=\"Calculation\"\r\n                placeholder=\"x = 5...\"\r\n                value={calc}\r\n                onChange={handleChange}\r\n                inputRef={inputField}\r\n                inputProps={{ onScroll: handleScroll, style: { width: '100%', height: '100%', overflow: 'auto' } }}\r\n                InputProps={{ style: { width: '100%', height: '100%' } }}\r\n                variant=\"outlined\"></TextField>\r\n            <TextField\r\n                style={{ flex: '1 1 auto', marginLeft: '10px' }}\r\n                multiline\r\n                label=\"Answers\"\r\n                variant=\"outlined\"\r\n                value={answers}\r\n                inputRef={outputField}\r\n                InputProps={{ style: { width: '100%', height: '100%' } }}\r\n                inputProps={{ readOnly: true, style: { width: '100%', height: '100%' } }}></TextField>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalcField\r\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\r\n\r\ntype SetValue<T> = Dispatch<SetStateAction<T>>\r\n\r\nfunction useLocalStorage<T>(key: string, initialValue: T): [T, SetValue<T>] {\r\n  // Get from local storage then\r\n  // parse stored json or return initialValue\r\n  const readValue = (): T => {\r\n    // Prevent build error \"window is undefined\" but keep keep working\r\n    if (typeof window === 'undefined') {\r\n      return initialValue\r\n    }\r\n\r\n    try {\r\n      const item = window.localStorage.getItem(key)\r\n      return item ? (JSON.parse(item) as T) : initialValue\r\n    } catch (error) {\r\n      console.warn(`Error reading localStorage key “${key}”:`, error)\r\n      return initialValue\r\n    }\r\n  }\r\n\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState<T>(readValue)\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue: SetValue<T> = value => {\r\n    // Prevent build error \"window is undefined\" but keeps working\r\n    if (typeof window == 'undefined') {\r\n      console.warn(\r\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\r\n      )\r\n    }\r\n\r\n    try {\r\n      // Allow value to be a function so we have the same API as useState\r\n      const newValue = value instanceof Function ? value(storedValue) : value\r\n\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(newValue))\r\n\r\n      // Save state\r\n      setStoredValue(newValue)\r\n\r\n      // We dispatch a custom event so every useLocalStorage hook are notified\r\n      window.dispatchEvent(new Event('local-storage'))\r\n    } catch (error) {\r\n      console.warn(`Error setting localStorage key “${key}”:`, error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setStoredValue(readValue())\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const handleStorageChange = () => {\r\n      setStoredValue(readValue())\r\n    }\r\n\r\n    // this only works for other documents, not the current one\r\n    window.addEventListener('storage', handleStorageChange)\r\n\r\n    // this is a custom event, triggered in writeValueToLocalStorage\r\n    window.addEventListener('local-storage', handleStorageChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('storage', handleStorageChange)\r\n      window.removeEventListener('local-storage', handleStorageChange)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return [storedValue, setValue]\r\n}\r\n\r\nexport default useLocalStorage","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport CalcField from './CalcField';\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\ntype TabPanelProps = {\r\n    children?: React.ReactNode,\r\n    index: any,\r\n    value: any,\r\n    className?: string\r\n};\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3} height=\"100%\" boxSizing=\"border-box\">\r\n                    <Typography component={'span'} style={{ height: '100%' }}>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        backgroundColor: theme.palette.background.default\r\n    },\r\n    tabPanel: {\r\n        flex: '1 1 auto'\r\n    }\r\n}));\r\n\r\nexport default function Main() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const [tabs, setTabs] = useLocalStorage<string[]>('tabs', []);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: any) => {\r\n        setValue(newValue);\r\n    };\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setTabs([...tabs, '']);\r\n    };\r\n\r\n    const tabEls = tabs.map((tab, index) => {\r\n        return <Tab key={index} label={`Calc ${index}`} {...a11yProps(index)} />\r\n    });\r\n\r\n    const tabPanels = tabs.map((tab, index) => {\r\n        const handleChange = (value: string) => {\r\n            let items = [...tabs];\r\n            items[index] = value;\r\n            setTabs(items);\r\n        };\r\n\r\n        return <TabPanel key={index} className={classes.tabPanel} value={value} index={index}>\r\n            <CalcField value={tab} onChange={handleChange} />\r\n        </TabPanel>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Tabs\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    value={value}\r\n                    onChange={handleChange} aria-label=\"simple tabs example\">\r\n                    {tabEls}\r\n                    <IconButton onClick={handleClick}>\r\n                        <AddIcon style={{ color: 'white' }} />\r\n                    </IconButton>\r\n                </Tabs>\r\n            </AppBar>\r\n            {tabPanels}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}